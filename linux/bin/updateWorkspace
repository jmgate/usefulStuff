#!/bin/bash
cd ${MY_HOME}

info()
{
  echo -e "\e[1m${1}\e[0m"
} # end of info()

tmp="/tmp/updateWorkspace"
mkdir -p $tmp

cleanUp()
{
  rm -rf $tmp
} # end of cleanUp()

# Usage information.
usage()
{
  echo "Figure it out."
} # end of usage()

# Get command line arguments.
trilinos=false
empire=false
if [[ $# -eq 0 ]]; then
  trilinos=true
  empire=true
fi
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -h|--help)
      usage
      cleanUp
      exit 0
      ;;
    -t|--trilinos)
      trilinos=true
      shift
      ;;
    -e|--empire)
      empire=true
      shift
      ;;
    *)
      usage
      echo "Unrecognized option: $key"
      cleanUp
      exit 1
  esac
done

if [[ "$trilinos" == "true" ]]; then
# TriBITS
banner "Updating TriBITS' master Branch"
repos="TriBITS"
gitdist --dist-repos=${repos} up tribits master
info "Fetching Everything Else"
gitdist --dist-repos=${repos} f --all
banner "Cleaning up Old Branches"
gitdist --dist-repos=${repos} clean-old-branches

# Trilinos
banner "Updating Trilinos' master and develop Branches"
repos="Trilinos"
gitdist --dist-repos=${repos} up trilinos master
gitdist --dist-repos=${repos} up trilinos develop
info "Fetching Everything Else"
gitdist --dist-repos=${repos} f --all
banner "Cleaning up Old Branches"
gitdist --dist-repos=${repos} clean-old-branches
fi

if [[ "$empire" == "true" ]]; then
# EMPIRE
banner "Updating EMPIRE's master and develop Branches"
repos="empire/EMPIRE,"
repos="${repos}empire/EMPIRE-PIC,"
repos="${repos}empire/EMPIRE-Fluid,"
repos="${repos}empire/EMPIRE-Hybrid,"
repos="${repos}empire/SPIN,"
repos="${repos}empire/ExtendedTesting,"
repos="${repos}empire/BuildScripts"
gitdist --dist-repos=${repos} up em-plasma master
gitdist --dist-repos=${repos} up em-plasma develop
info "Fetching Everything Else"
gitdist --dist-repos=${repos} f --all
banner "Cleaning up Old Branches"
gitdist --dist-repos=${repos} clean-old-branches
info "Updating Project-Management"
repos="empire/Project-Management"
gitdist --dist-repos=${repos} checkout-if-not-on master
echo "Pulling from origin..."
gitdist --dist-repos=${repos} pl
banner "Cleaning up Old Branches"
gitdist --dist-repos=${repos} clean-old-branches
info "Updating EPIXS"
repos="empire/EPIXS"
echo "Fetching from origin..."
gitdist --dist-repos=${repos} f
info "Updating master..."
gitdist --dist-repos=${repos} checkout-if-not-on master
echo "Merging with origin/master..."
gitdist --dist-repos=${repos} mg --ff-only origin/master
info "Updating develop..."
gitdist --dist-repos=${repos} checkout-if-not-on develop
echo "Merging with origin/develop..."
gitdist --dist-repos=${repos} mg --ff-only origin/develop
banner "Cleaning up Old Branches"
gitdist --dist-repos=${repos} clean-old-branches
fi

# Clean up and exit.
cleanUp

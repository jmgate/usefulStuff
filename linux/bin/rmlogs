#!/bin/bash
usage="Usage:  rmlogs [fileName [numToSave] ]\n"
usage="${usage}  fileName:   A glob pattern specifying the series of files you'd like to\n"
usage="${usage}              remove.  For instance, if you'd like to remove most of the\n"
usage="${usage}              make*.log files, simply use \"make*.log\" (with the quotes) for\n"
usage="${usage}              the fileName.  The default is to remove the config*.log,\n"
usage="${usage}              make*.log, and ctest*.log files.  If you'd like those three\n"
usage="${usage}              removed, but would like to specify a different number to save\n"
usage="${usage}              (see below), simply use 'all' (with or without quotes) as the\n"
usage="${usage}              fileName.\n"
usage="${usage}  numToSave:  The number of files matching the above pattern that you'd like to\n"
usage="${usage}              keep around.  The most recent numToSave won't be removed.  The\n"
usage="${usage}              default value is 3."
numToSave=3
if [[ $# -gt 2 ]]; then
  printf "$usage"
  exit 1
fi
if [[ $# -eq 2 ]]; then
  numToSave=$2
fi
if [[ ($# -ge 1) && ($1 != "all") ]]; then
  fileNames=("$1")
else
  fileNames=("config*.log" "make*.log" "ctest*.log")
fi
for file in "${fileNames[@]}"; do
  if ls $file 1> /dev/null 2>&1; then
    numFiles=$(ls -1t $file | wc -l)
    numToDelete=$(expr $numFiles - $numToSave)
    if [[ $numToDelete -gt 0 ]]; then
      rm -v $(ls -1t $file | tail -n $numToDelete)
    fi
  else
    echo "No files match the pattern '$file'.  Nothing to remove."
    printf "$usage"
  fi
done
